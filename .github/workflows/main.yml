name: Deploy Backend to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp build/libs/*.jar deploy/crm-chatbot-backend.jar
        cp src/main/resources/application-prod.properties deploy/
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: deploy
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Stop the service
          sudo systemctl stop pidash-backend || true
          
          # Backup current jar
          cp /var/www/pidash-backend/crm-chatbot-backend.jar /var/www/pidash-backend/crm-chatbot-backend.jar.backup || true
          
          # Remove old files
          rm -rf /var/www/pidash-backend/*
          
    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: deploy
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "deploy/*"
        target: "/var/www/pidash-backend/"
        strip_components: 1
        
    - name: Start application
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: deploy
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Create environment file
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee /var/www/pidash-backend/.env
          
          # Reload systemd and start service
          sudo systemctl daemon-reload
          sudo systemctl enable pidash-backend
          sudo systemctl start pidash-backend
          
          # Wait and check status
          sleep 10
          sudo systemctl status pidash-backend
