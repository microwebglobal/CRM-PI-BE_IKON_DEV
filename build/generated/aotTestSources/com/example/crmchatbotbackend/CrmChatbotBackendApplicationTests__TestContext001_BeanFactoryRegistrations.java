package com.example.crmchatbotbackend;

import com.example.crmchatbotbackend.config.OpenAPIConfig__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.config.SecurityConfig__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.controller.AdminController__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.controller.AuthController__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.repository.UserRepository__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.security.JwtTokenFilter__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.security.JwtUtil__TestContext001_BeanDefinitions;
import com.example.crmchatbotbackend.security.UserDetailsServiceImpl__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.SpringBootAutoConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.VaadinApplicationConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.VaadinConfigurationProperties__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.VaadinScopesConfig__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.VaadinServletConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.flow.spring.springnative.VaadinBeanFactoryInitializationAotProcessor__TestContext001_BeanDefinitions;
import com.vaadin.hilla.ApplicationContextProvider__TestContext001_BeanDefinitions;
import com.vaadin.hilla.EndpointControllerConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.hilla.EndpointController__TestContext001_BeanDefinitions;
import com.vaadin.hilla.EndpointProperties__TestContext001_BeanDefinitions;
import com.vaadin.hilla.push.PushConfigurer__TestContext001_BeanDefinitions;
import com.vaadin.hilla.route.RouteUnifyingConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.hilla.route.RouteUtil__TestContext001_BeanDefinitions;
import com.vaadin.hilla.signals.config.SignalsConfiguration__TestContext001_BeanDefinitions;
import com.vaadin.hilla.startup.EndpointRegistryInitializer__TestContext001_BeanDefinitions;
import com.vaadin.hilla.startup.RouteUnifyingServiceInitListener__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocKotlinConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocPageableConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocSortConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.configuration.SpringDocUIConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.core.properties.SpringDocConfigProperties__TestContext001_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigParameters__TestContext001_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiConfigProperties__TestContext001_BeanDefinitions;
import org.springdoc.core.properties.SwaggerUiOAuthProperties__TestContext001_BeanDefinitions;
import org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions;
import org.springdoc.webmvc.ui.SwaggerConfig__TestContext001_BeanDefinitions;
import org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator__TestContext001_BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.HttpClientProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.orm.jpa.JpaProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.SecurityProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.session.JdbcSessionConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.session.JdbcSessionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.session.SessionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.session.SessionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__TestContext001_BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__TestContext001_BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions;
import org.springframework.boot.test.mock.mockito.MockitoPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__TestContext001_BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.mapping.JpaMetamodelMappingContext__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.DefaultJpaContext__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension__TestContext001_BeanDefinitions;
import org.springframework.data.jpa.util.JpaMetamodelCacheCleanup__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.PropertiesBasedNamedQueries__TestContext001_BeanDefinitions;
import org.springframework.data.repository.core.support.RepositoryComposition__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__TestContext001_BeanDefinitions;
import org.springframework.data.web.config.SpringDataWebConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.core.config.ApplicationModuleInitializerRuntimeVerification__TestContext001_BeanDefinitions;
import org.springframework.modulith.events.config.EventExternalizationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.events.config.EventPublicationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.events.jackson.JacksonEventSerializationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.events.jpa.JpaEventPublicationAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.moments.autoconfigure.MomentsAutoConfiguration__TestContext001_BeanDefinitions;
import org.springframework.modulith.moments.support.MomentsProperties__TestContext001_BeanDefinitions;
import org.springframework.orm.jpa.SharedEntityManagerCreator__TestContext001_BeanDefinitions;
import org.springframework.scheduling.annotation.ProxyAsyncConfiguration__TestContext001_BeanDefinitions;
import org.springframework.scheduling.annotation.SchedulingConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.method.configuration.PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.ObservationConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration__TestContext001_BeanDefinitions;
import org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions;
import org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration__TestContext001_BeanDefinitions;
import org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration__TestContext001_BeanDefinitions;
import org.springframework.test.context.support.DynamicPropertyRegistrarBeanInitializer__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions;
import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class CrmChatbotBackendApplicationTests__TestContext001_BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.SpyPostProcessor.getSpyPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.test.mock.mockito.MockitoPostProcessor", MockitoPostProcessor__TestContext001_BeanDefinitions.getMockitoPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.test.context.support.internalDynamicPropertyRegistrarBeanInitializer", DynamicPropertyRegistrarBeanInitializer__TestContext001_BeanDefinitions.getInternalDynamicPropertyRegistrarBeanInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__TestContext001_BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__TestContext001_BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("crmChatbotBackendApplication", CrmChatbotBackendApplication__TestContext001_BeanDefinitions.getCrmChatbotBackendApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("openAPIConfig", OpenAPIConfig__TestContext001_BeanDefinitions.getOpenAPIConfigBeanDefinition());
    beanFactory.registerBeanDefinition("securityConfig", SecurityConfig__TestContext001_BeanDefinitions.getSecurityConfigBeanDefinition());
    beanFactory.registerBeanDefinition("adminController", AdminController__TestContext001_BeanDefinitions.getAdminControllerBeanDefinition());
    beanFactory.registerBeanDefinition("authController", AuthController__TestContext001_BeanDefinitions.getAuthControllerBeanDefinition());
    beanFactory.registerBeanDefinition("jwtTokenFilter", JwtTokenFilter__TestContext001_BeanDefinitions.getJwtTokenFilterBeanDefinition());
    beanFactory.registerBeanDefinition("jwtUtil", JwtUtil__TestContext001_BeanDefinitions.getJwtUtilBeanDefinition());
    beanFactory.registerBeanDefinition("userDetailsServiceImpl", UserDetailsServiceImpl__TestContext001_BeanDefinitions.getUserDetailsServiceImplBeanDefinition());
    beanFactory.registerBeanDefinition("apiInfo", OpenAPIConfig__TestContext001_BeanDefinitions.getApiInfoBeanDefinition());
    beanFactory.registerBeanDefinition("publicApi", OpenAPIConfig__TestContext001_BeanDefinitions.getPublicApiBeanDefinition());
    beanFactory.registerBeanDefinition("_prePostMethodSecurityConfiguration", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPrePostMethodSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("preFilterAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPreFilterAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("preAuthorizeAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPreAuthorizeAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("postAuthorizeAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPostAuthorizeAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("postFilterAuthorizationMethodInterceptor", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPostFilterAuthorizationMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("prePostAuthorizeExpressionHintsRegistrar", PrePostMethodSecurityConfiguration__TestContext001_BeanDefinitions.getPrePostAuthorizeExpressionHintsRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.AuthorizationProxyConfiguration", AuthorizationProxyConfiguration__TestContext001_BeanDefinitions.getAuthorizationProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authorizationProxyFactory", AuthorizationProxyConfiguration__TestContext001_BeanDefinitions.getAuthorizationProxyFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("authorizeReturnObjectMethodInterceptor", AuthorizationProxyConfiguration__TestContext001_BeanDefinitions.getAuthorizeReturnObjectMethodInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("authorizeReturnObjectHintsRegistrar", AuthorizationProxyConfiguration__TestContext001_BeanDefinitions.getAuthorizeReturnObjectHintsRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.AuthorizationProxyWebConfiguration", AuthorizationProxyWebConfiguration__TestContext001_BeanDefinitions.getAuthorizationProxyWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webTargetVisitor", AuthorizationProxyWebConfiguration__TestContext001_BeanDefinitions.getWebTargetVisitorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.method.configuration.MethodObservationConfiguration", MethodObservationConfiguration__TestContext001_BeanDefinitions.getMethodObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("methodAuthorizationManagerPostProcessor", MethodObservationConfiguration__TestContext001_BeanDefinitions.getMethodAuthorizationManagerPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("methodResultAuthorizationManagerPostProcessor", MethodObservationConfiguration__TestContext001_BeanDefinitions.getMethodResultAuthorizationManagerPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("securityFilterChain", SecurityConfig__TestContext001_BeanDefinitions.getSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("passwordEncoder", SecurityConfig__TestContext001_BeanDefinitions.getPasswordEncoderBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManager", SecurityConfig__TestContext001_BeanDefinitions.getAuthenticationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", AnnotationAwareAspectJAutoProxyCreator__TestContext001_BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
    beanFactory.registerBeanDefinition("preFilterAuthorizationAdvisor", MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions.AdvisorWrapper.getPreFilterAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("preAuthorizeAuthorizationAdvisor", MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions.AdvisorWrapper.getPreAuthorizeAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("postFilterAuthorizationAdvisor", MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions.AdvisorWrapper.getPostFilterAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("postAuthorizeAuthorizationAdvisor", MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions.AdvisorWrapper.getPostAuthorizeAuthorizationAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("authorizeReturnObjectAdvisor", MethodSecurityAdvisorRegistrar__TestContext001_BeanDefinitions.AdvisorWrapper.getAuthorizeReturnObjectAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__TestContext001_BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__TestContext001_BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__TestContext001_BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__TestContext001_BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__TestContext001_BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__TestContext001_BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__TestContext001_BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__TestContext001_BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__TestContext001_BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__TestContext001_BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__TestContext001_BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__TestContext001_BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__TestContext001_BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__TestContext001_BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__TestContext001_BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__TestContext001_BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__TestContext001_BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.VaadinApplicationConfiguration", VaadinApplicationConfiguration__TestContext001_BeanDefinitions.getVaadinApplicationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultApplicationConfigurationFactory", VaadinApplicationConfiguration__TestContext001_BeanDefinitions.getDefaultApplicationConfigurationFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinApplicationContextInitializer", VaadinApplicationConfiguration__TestContext001_BeanDefinitions.getVaadinApplicationContextInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityVaadinMenuAccessControl", VaadinApplicationConfiguration__TestContext001_BeanDefinitions.getSpringSecurityVaadinMenuAccessControlBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.VaadinServletConfiguration", VaadinServletConfiguration__TestContext001_BeanDefinitions.getVaadinServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinRootMapping", VaadinServletConfiguration__TestContext001_BeanDefinitions.getVaadinRootMappingBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinForwardingController", VaadinServletConfiguration__TestContext001_BeanDefinitions.getVaadinForwardingControllerBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.SpringBootAutoConfiguration", SpringBootAutoConfiguration__TestContext001_BeanDefinitions.getSpringBootAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("contextInitializer", SpringBootAutoConfiguration__TestContext001_BeanDefinitions.getContextInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("servletRegistrationBean", SpringBootAutoConfiguration__TestContext001_BeanDefinitions.getServletRegistrationBeanBeanDefinition());
    beanFactory.registerBeanDefinition("websocketEndpointDeployer", SpringBootAutoConfiguration__TestContext001_BeanDefinitions.getWebsocketEndpointDeployerBeanDefinition());
    beanFactory.registerBeanDefinition("vaadin-com.vaadin.flow.spring.VaadinConfigurationProperties", VaadinConfigurationProperties__TestContext001_BeanDefinitions.getVaadinConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.AsyncConfigurerConfiguration.getAsyncConfigurerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutorAsyncConfigurer", TaskExecutorConfigurations__TestContext001_BeanDefinitions.AsyncConfigurerConfiguration.getApplicationTaskExecutorAsyncConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__TestContext001_BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration", TaskExecutorConfigurations__TestContext001_BeanDefinitions.BootstrapExecutorConfiguration.getBootstrapExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("bootstrapExecutorAliasPostProcessor", TaskExecutorConfigurations__TestContext001_BeanDefinitions.BootstrapExecutorConfiguration.getBootstrapExecutorAliasPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__TestContext001_BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__TestContext001_BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__TestContext001_BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__TestContext001_BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__TestContext001_BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.EnableWebMvcConfiguration.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__TestContext001_BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.SpringSecurityAutoConfiguration", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getSpringSecurityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinDefaultRequestCache", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getVaadinDefaultRequestCacheBeanDefinition());
    beanFactory.registerBeanDefinition("navigationAccessControlInitializer", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getNavigationAccessControlInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("navigationAccessControl", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getNavigationAccessControlBeanDefinition());
    beanFactory.registerBeanDefinition("navigationAccessControlConfigurerCustomizer", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getNavigationAccessControlConfigurerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("annotatedViewAccessChecker", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getAnnotatedViewAccessCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("routePathAccessChecker", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getRoutePathAccessCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("accessPatchChecker", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getAccessPatchCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("accessAnnotationChecker", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getAccessAnnotationCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("requestUtil", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getRequestUtilBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinRolePrefixHolder", SpringSecurityAutoConfiguration__TestContext001_BeanDefinitions.getVaadinRolePrefixHolderBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.VaadinScopesConfig", VaadinScopesConfig__TestContext001_BeanDefinitions.getVaadinScopesConfigBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinSessionScope", VaadinScopesConfig__TestContext001_BeanDefinitions.getVaadinSessionScopeBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinUIScope", VaadinScopesConfig__TestContext001_BeanDefinitions.getVaadinUIScopeBeanDefinition());
    beanFactory.registerBeanDefinition("vaadinRouteScope", VaadinScopesConfig__TestContext001_BeanDefinitions.getVaadinRouteScopeBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.ApplicationContextProvider", ApplicationContextProvider__TestContext001_BeanDefinitions.getApplicationContextProviderBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.EndpointControllerConfiguration", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointControllerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("accessChecker", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getAccessCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("csrfChecker", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getCsrfCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("hillaEndpointObjectMapper", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getHillaEndpointObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("endpointInvoker", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("endpointNameChecker", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointNameCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("endpointRegistry", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("endpointUtil", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointUtilBeanDefinition());
    beanFactory.registerBeanDefinition("typeChecker", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getTypeCheckerBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcRegistrationsHandlerMapping", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getWebMvcRegistrationsHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("endpointCodeGenerator", EndpointControllerConfiguration__TestContext001_BeanDefinitions.getEndpointCodeGeneratorBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.EndpointProperties", EndpointProperties__TestContext001_BeanDefinitions.getEndpointPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.EndpointController", EndpointController__TestContext001_BeanDefinitions.getEndpointControllerBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.push.PushConfigurer", PushConfigurer__TestContext001_BeanDefinitions.getPushConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("pushEndpoint", PushConfigurer__TestContext001_BeanDefinitions.getPushEndpointBeanDefinition());
    beanFactory.registerBeanDefinition("pushMessageHandler", PushConfigurer__TestContext001_BeanDefinitions.getPushMessageHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("atmosphereInitializer", PushConfigurer__TestContext001_BeanDefinitions.getAtmosphereInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("atmosphereServlet", PushConfigurer__TestContext001_BeanDefinitions.getAtmosphereServletBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.route.RouteUnifyingConfiguration", RouteUnifyingConfiguration__TestContext001_BeanDefinitions.getRouteUnifyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("routeUnifyingConfigurationProperties", RouteUnifyingConfiguration__TestContext001_BeanDefinitions.getRouteUnifyingConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.route.RouteUtil", RouteUtil__TestContext001_BeanDefinitions.getRouteUtilBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.signals.config.SignalsConfiguration", SignalsConfiguration__TestContext001_BeanDefinitions.getSignalsConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("signalsHandler", SignalsConfiguration__TestContext001_BeanDefinitions.getSignalsHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.startup.EndpointRegistryInitializer", EndpointRegistryInitializer__TestContext001_BeanDefinitions.getEndpointRegistryInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.hilla.startup.RouteUnifyingServiceInitListener", RouteUnifyingServiceInitListener__TestContext001_BeanDefinitions.getRouteUnifyingServiceInitListenerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider", SpringDocConfiguration__TestContext001_BeanDefinitions.QuerydslProvider.getQuerydslProviderBeanDefinition());
    beanFactory.registerBeanDefinition("queryDslQuerydslPredicateOperationCustomizer", SpringDocConfiguration__TestContext001_BeanDefinitions.QuerydslProvider.getQueryDslQuerydslPredicateOperationCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice", SpringDocConfiguration__TestContext001_BeanDefinitions.OpenApiResourceAdvice.getOpenApiResourceAdviceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration", SpringDocConfiguration__TestContext001_BeanDefinitions.SpringDocWebFluxSupportConfiguration.getSpringDocWebFluxSupportConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webFluxSupportConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.SpringDocWebFluxSupportConfiguration.getWebFluxSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider", SpringDocConfiguration__TestContext001_BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDocSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDataWebPropertiesProvider", SpringDocConfiguration__TestContext001_BeanDefinitions.SpringDocSpringDataWebPropertiesProvider.getSpringDataWebPropertiesProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration", SpringDocConfiguration__TestContext001_BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webConversionServiceProvider", SpringDocConfiguration__TestContext001_BeanDefinitions.WebConversionServiceConfiguration.getWebConversionServiceProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocConfiguration", SpringDocConfiguration__TestContext001_BeanDefinitions.getSpringDocConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("springdocBeanFactoryPostProcessor", SpringDocConfiguration__TestContext001_BeanDefinitions.getSpringdocBeanFactoryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("localSpringDocParameterNameDiscoverer", SpringDocConfiguration__TestContext001_BeanDefinitions.getLocalSpringDocParameterNameDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("additionalModelsConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.getAdditionalModelsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("fileSupportConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.getFileSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("responseSupportConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.getResponseSupportConverterBeanDefinition());
    beanFactory.registerBeanDefinition("schemaPropertyDeprecatingConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.getSchemaPropertyDeprecatingConverterBeanDefinition());
    beanFactory.registerBeanDefinition("polymorphicModelConverter", SpringDocConfiguration__TestContext001_BeanDefinitions.getPolymorphicModelConverterBeanDefinition());
    beanFactory.registerBeanDefinition("openAPIBuilder", SpringDocConfiguration__TestContext001_BeanDefinitions.getOpenAPIBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("modelConverterRegistrar", SpringDocConfiguration__TestContext001_BeanDefinitions.getModelConverterRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("operationBuilder", SpringDocConfiguration__TestContext001_BeanDefinitions.getOperationBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("propertyResolverUtils", SpringDocConfiguration__TestContext001_BeanDefinitions.getPropertyResolverUtilsBeanDefinition());
    beanFactory.registerBeanDefinition("requestBodyBuilder", SpringDocConfiguration__TestContext001_BeanDefinitions.getRequestBodyBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("securityParser", SpringDocConfiguration__TestContext001_BeanDefinitions.getSecurityParserBeanDefinition());
    beanFactory.registerBeanDefinition("genericReturnTypeParser", SpringDocConfiguration__TestContext001_BeanDefinitions.getGenericReturnTypeParserBeanDefinition());
    beanFactory.registerBeanDefinition("parameterBuilder", SpringDocConfiguration__TestContext001_BeanDefinitions.getParameterBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocProviders", SpringDocConfiguration__TestContext001_BeanDefinitions.getSpringDocProvidersBeanDefinition());
    beanFactory.registerBeanDefinition("springdocObjectMapperProvider", SpringDocConfiguration__TestContext001_BeanDefinitions.getSpringdocObjectMapperProviderBeanDefinition());
    beanFactory.registerBeanDefinition("springDocCustomizers", SpringDocConfiguration__TestContext001_BeanDefinitions.getSpringDocCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocKotlinConfiguration", SpringDocKotlinConfiguration__TestContext001_BeanDefinitions.getSpringDocKotlinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("kotlinCoroutinesReturnTypeParser", SpringDocKotlinConfiguration__TestContext001_BeanDefinitions.getKotlinCoroutinesReturnTypeParserBeanDefinition());
    beanFactory.registerBeanDefinition("nullableKotlinRequestParameterCustomizer", SpringDocKotlinConfiguration__TestContext001_BeanDefinitions.getNullableKotlinRequestParameterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocPageableConfiguration", SpringDocPageableConfiguration__TestContext001_BeanDefinitions.getSpringDocPageableConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableOpenAPIConverter", SpringDocPageableConfiguration__TestContext001_BeanDefinitions.getPageableOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingMethodParameterCustomizer", SpringDocPageableConfiguration__TestContext001_BeanDefinitions.getDelegatingMethodParameterCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration", SpringDocSecurityConfiguration__TestContext001_BeanDefinitions.SpringSecurityLoginEndpointConfiguration.getSpringSecurityLoginEndpointConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocSecurityConfiguration", SpringDocSecurityConfiguration__TestContext001_BeanDefinitions.getSpringDocSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocSortConfiguration", SpringDocSortConfiguration__TestContext001_BeanDefinitions.getSpringDocSortConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sortOpenAPIConverter", SpringDocSortConfiguration__TestContext001_BeanDefinitions.getSortOpenAPIConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.configuration.SpringDocUIConfiguration", SpringDocUIConfiguration__TestContext001_BeanDefinitions.getSpringDocUIConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SpringDocConfigProperties", SpringDocConfigProperties__TestContext001_BeanDefinitions.getSpringDocConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigParameters", SwaggerUiConfigParameters__TestContext001_BeanDefinitions.getSwaggerUiConfigParametersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiConfigProperties", SwaggerUiConfigProperties__TestContext001_BeanDefinitions.getSwaggerUiConfigPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.core.properties.SwaggerUiOAuthProperties", SwaggerUiOAuthProperties__TestContext001_BeanDefinitions.getSwaggerUiOAuthPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.MultipleOpenApiSupportConfiguration", MultipleOpenApiSupportConfiguration__TestContext001_BeanDefinitions.getMultipleOpenApiSupportConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipleOpenApiResource", MultipleOpenApiSupportConfiguration__TestContext001_BeanDefinitions.getMultipleOpenApiResourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.SpringDocWebMvcRouterConfiguration.getSpringDocWebMvcRouterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionProvider", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.SpringDocWebMvcRouterConfiguration.getRouterFunctionProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.getSpringDocWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openApiResource", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.getOpenApiResourceBeanDefinition());
    beanFactory.registerBeanDefinition("requestBuilder", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.getRequestBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("springWebProvider", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.getSpringWebProviderBeanDefinition());
    beanFactory.registerBeanDefinition("responseBuilder", SpringDocWebMvcConfiguration__TestContext001_BeanDefinitions.getResponseBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springdoc.webmvc.ui.SwaggerConfig", SwaggerConfig__TestContext001_BeanDefinitions.getSwaggerConfigBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWelcome", SwaggerConfig__TestContext001_BeanDefinitions.getSwaggerWelcomeBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerConfigResource", SwaggerConfig__TestContext001_BeanDefinitions.getSwaggerConfigResourceBeanDefinition());
    beanFactory.registerBeanDefinition("indexPageTransformer", SwaggerConfig__TestContext001_BeanDefinitions.getIndexPageTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerWebMvcConfigurer", SwaggerConfig__TestContext001_BeanDefinitions.getSwaggerWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("swaggerResourceResolver", SwaggerConfig__TestContext001_BeanDefinitions.getSwaggerResourceResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.AspectJAutoProxyingConfiguration.getAspectJAutoProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__TestContext001_BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__TestContext001_BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration", JtaAutoConfiguration__TestContext001_BeanDefinitions.getJtaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getHikariBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetailsHikariBeanPostProcessor", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getJdbcConnectionDetailsHikariBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("dataSource", DataSourceConfiguration__TestContext001_BeanDefinitions.Hikari.getDataSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration", DataSourceAutoConfiguration__TestContext001_BeanDefinitions.PooledDataSourceConfiguration.getPooledDataSourceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcConnectionDetails", DataSourceAutoConfiguration__TestContext001_BeanDefinitions.PooledDataSourceConfiguration.getJdbcConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hikariPoolDataSourceMetadataProvider", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.HikariPoolDataSourceMetadataProviderConfiguration.getHikariPoolDataSourceMetadataProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration", DataSourcePoolMetadataProvidersConfiguration__TestContext001_BeanDefinitions.getDataSourcePoolMetadataProvidersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", DataSourceAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties", DataSourceProperties__TestContext001_BeanDefinitions.getDataSourcePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionManagerCustomizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("transactionExecutionListeners", TransactionManagerCustomizationAutoConfiguration__TestContext001_BeanDefinitions.getTransactionExecutionListenersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__TestContext001_BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.events.jpa.JpaEventPublicationAutoConfiguration", JpaEventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getJpaEventPublicationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaEventPublicationRepository", JpaEventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getJpaEventPublicationRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getJpaWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptor", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("openEntityManagerInViewInterceptorConfigurer", JpaBaseConfiguration__TestContext001_BeanDefinitions.JpaWebConfiguration.getOpenEntityManagerInViewInterceptorConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration", JpaBaseConfiguration__TestContext001_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceManagedTypes", JpaBaseConfiguration__TestContext001_BeanDefinitions.PersistenceManagedTypesConfiguration.getPersistenceManagedTypesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getHibernateJpaConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionManager", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getTransactionManagerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaVendorAdapter", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getJpaVendorAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactoryBuilder", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getEntityManagerFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("entityManagerFactory", HibernateJpaConfiguration__TestContext001_BeanDefinitions.getEntityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties", HibernateProperties__TestContext001_BeanDefinitions.getHibernatePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties", JpaProperties__TestContext001_BeanDefinitions.getJpaPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration", HibernateJpaAutoConfiguration__TestContext001_BeanDefinitions.getHibernateJpaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__TestContext001_BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__TestContext001_BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__TestContext001_BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__TestContext001_BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__TestContext001_BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__TestContext001_BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__TestContext001_BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__TestContext001_BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration", JpaRepositoriesAutoConfiguration__TestContext001_BeanDefinitions.getJpaRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_entityManagerFactory", SharedEntityManagerCreator__TestContext001_BeanDefinitions.getJpaSharedEMentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("emBeanDefinitionRegistrarPostProcessor", EntityManagerBeanDefinitionRegistrarPostProcessor__TestContext001_BeanDefinitions.getEmBeanDefinitionRegistrarPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("jpaMappingContext", JpaMetamodelMappingContext__TestContext001_BeanDefinitions.getJpaMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("jpaContext", DefaultJpaContext__TestContext001_BeanDefinitions.getJpaContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.util.JpaMetamodelCacheCleanup", JpaMetamodelCacheCleanup__TestContext001_BeanDefinitions.getJpaMetamodelCacheCleanupBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension", JpaEvaluationContextExtension__TestContext001_BeanDefinitions.getJpaEvaluationContextExtensionBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.named-queries#0", PropertiesBasedNamedQueries__TestContext001_BeanDefinitions.getNamedqueriesBeanDefinition());
    beanFactory.registerBeanDefinition("jpa.UserRepository.fragments#0", RepositoryComposition__TestContext001_BeanDefinitions.RepositoryFragments.getFragmentsBeanDefinition());
    beanFactory.registerBeanDefinition("userRepository", UserRepository__TestContext001_BeanDefinitions.getUserRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__TestContext001_BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__TestContext001_BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.ProjectingArgumentResolverRegistrar", ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions.getProjectingArgumentResolverRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("projectingArgumentResolverBeanPostProcessor", ProjectingArgumentResolverRegistrar__TestContext001_BeanDefinitions.getProjectingArgumentResolverBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataWebConfiguration", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getSpringDataWebConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("offsetResolver", SpringDataWebConfiguration__TestContext001_BeanDefinitions.getOffsetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("pageModule", SpringDataJacksonConfiguration__TestContext001_BeanDefinitions.getPageModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getSpringDataWebAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("pageableCustomizer", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getPageableCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("sortCustomizer", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getSortCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("springDataWebSettings", SpringDataWebAutoConfiguration__TestContext001_BeanDefinitions.getSpringDataWebSettingsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties", SpringDataWebProperties__TestContext001_BeanDefinitions.getSpringDataWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration", JdbcTemplateConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcTemplate", JdbcTemplateConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration", NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions.getNamedParameterJdbcTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("namedParameterJdbcTemplate", NamedParameterJdbcTemplateConfiguration__TestContext001_BeanDefinitions.getNamedParameterJdbcTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration", JdbcTemplateAutoConfiguration__TestContext001_BeanDefinitions.getJdbcTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties", JdbcProperties__TestContext001_BeanDefinitions.getJdbcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__TestContext001_BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration", HttpClientAutoConfiguration__TestContext001_BeanDefinitions.getHttpClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpRequestFactoryBuilder", HttpClientAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpRequestFactoryBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpRequestFactorySettings", HttpClientAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpRequestFactorySettingsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties", HttpClientProperties__TestContext001_BeanDefinitions.getHttpClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration", ReactorNettyConfigurations__TestContext001_BeanDefinitions.ReactorResourceFactoryConfiguration.getReactorResourceFactoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactorResourceFactory", ReactorNettyConfigurations__TestContext001_BeanDefinitions.ReactorResourceFactoryConfiguration.getReactorResourceFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties", ReactorNettyProperties__TestContext001_BeanDefinitions.getReactorNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.ReactorNetty.getReactorNettyBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpConnectorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpConnectorBuilder", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpConnectorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpConnectorSettings", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpConnectorSettingsBeanDefinition());
    beanFactory.registerBeanDefinition("clientHttpConnector", ClientHttpConnectorAutoConfiguration__TestContext001_BeanDefinitions.getClientHttpConnectorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.http.reactiveclient-org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties", HttpReactiveClientProperties__TestContext001_BeanDefinitions.getHttpReactiveClientPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__TestContext001_BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__TestContext001_BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration", JdbcClientAutoConfiguration__TestContext001_BeanDefinitions.getJdbcClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcClient", JdbcClientAutoConfiguration__TestContext001_BeanDefinitions.getJdbcClientBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration", NettyAutoConfiguration__TestContext001_BeanDefinitions.getNettyAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties", NettyProperties__TestContext001_BeanDefinitions.getNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration", ReactorAutoConfiguration__TestContext001_BeanDefinitions.getReactorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties", ReactorProperties__TestContext001_BeanDefinitions.getReactorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("objectPostProcessor", ObjectPostProcessorConfiguration__TestContext001_BeanDefinitions.getObjectPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManagerBuilder", AuthenticationConfiguration__TestContext001_BeanDefinitions.getAuthenticationManagerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("enableGlobalAuthenticationAutowiredConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getEnableGlobalAuthenticationAutowiredConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeUserDetailsBeanManagerConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeUserDetailsBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("initializeAuthenticationProviderBeanManagerConfigurer", AuthenticationConfiguration__TestContext001_BeanDefinitions.getInitializeAuthenticationProviderBeanManagerConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingApplicationListener", WebSecurityConfiguration__TestContext001_BeanDefinitions.getDelegatingApplicationListenerBeanDefinition());
    beanFactory.registerBeanDefinition("webSecurityExpressionHandler", WebSecurityConfiguration__TestContext001_BeanDefinitions.getWebSecurityExpressionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("privilegeEvaluator", WebSecurityConfiguration__TestContext001_BeanDefinitions.getPrivilegeEvaluatorBeanDefinition());
    beanFactory.registerBeanDefinition("conversionServicePostProcessor", WebSecurityConfiguration__TestContext001_BeanDefinitions.getConversionServicePostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityPathPatternParserBeanDefinitionRegistryPostProcessor", WebSecurityConfiguration__TestContext001_BeanDefinitions.getSpringSecurityPathPatternParserBeanDefinitionRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getWebMvcSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestDataValueProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getRequestDataValueProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.getSpringSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity", HttpSecurityConfiguration__TestContext001_BeanDefinitions.getHttpSecurityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.security.config.annotation.web.configuration.ObservationConfiguration", ObservationConfiguration__TestContext001_BeanDefinitions.getObservationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webAuthorizationManagerPostProcessor", ObservationConfiguration__TestContext001_BeanDefinitions.getWebAuthorizationManagerPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationManagerPostProcessor", ObservationConfiguration__TestContext001_BeanDefinitions.getAuthenticationManagerPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("filterChainDecoratorPostProcessor", ObservationConfiguration__TestContext001_BeanDefinitions.getFilterChainDecoratorPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.WebSecurityEnablerConfiguration.getWebSecurityEnablerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration", SpringBootWebSecurityConfiguration__TestContext001_BeanDefinitions.getSpringBootWebSecurityConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getSecurityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("authenticationEventPublisher", SecurityAutoConfiguration__TestContext001_BeanDefinitions.getAuthenticationEventPublisherBeanDefinition());
    beanFactory.registerBeanDefinition("spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties", SecurityProperties__TestContext001_BeanDefinitions.getSecurityPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("securityFilterChainRegistration", SecurityFilterAutoConfiguration__TestContext001_BeanDefinitions.getSecurityFilterChainRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration", SpringHttpSessionConfiguration__TestContext001_BeanDefinitions.getSpringHttpSessionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sessionEventHttpSessionListenerAdapter", SpringHttpSessionConfiguration__TestContext001_BeanDefinitions.getSessionEventHttpSessionListenerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("springSessionRepositoryFilter", SpringHttpSessionConfiguration__TestContext001_BeanDefinitions.getSpringSessionRepositoryFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration", JdbcHttpSessionConfiguration__TestContext001_BeanDefinitions.getJdbcHttpSessionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sessionRepository", JdbcHttpSessionConfiguration__TestContext001_BeanDefinitions.getSessionRepositoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.JdbcSessionConfiguration", JdbcSessionConfiguration__TestContext001_BeanDefinitions.getJdbcSessionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jdbcSessionDataSourceScriptDatabaseInitializer", JdbcSessionConfiguration__TestContext001_BeanDefinitions.getJdbcSessionDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("springBootSessionRepositoryCustomizer", JdbcSessionConfiguration__TestContext001_BeanDefinitions.getSpringBootSessionRepositoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.session.jdbc-org.springframework.boot.autoconfigure.session.JdbcSessionProperties", JdbcSessionProperties__TestContext001_BeanDefinitions.getJdbcSessionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$ServletSessionRepositoryConfiguration", SessionAutoConfiguration__TestContext001_BeanDefinitions.ServletSessionConfiguration.ServletSessionRepositoryConfiguration.getServletSessionRepositoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration$RememberMeServicesConfiguration", SessionAutoConfiguration__TestContext001_BeanDefinitions.ServletSessionConfiguration.RememberMeServicesConfiguration.getRememberMeServicesConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("rememberMeServicesCookieSerializerCustomizer", SessionAutoConfiguration__TestContext001_BeanDefinitions.ServletSessionConfiguration.RememberMeServicesConfiguration.getRememberMeServicesCookieSerializerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.SessionRepositoryFilterConfiguration", SessionRepositoryFilterConfiguration__TestContext001_BeanDefinitions.getSessionRepositoryFilterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sessionRepositoryFilterRegistration", SessionRepositoryFilterConfiguration__TestContext001_BeanDefinitions.getSessionRepositoryFilterRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.session-org.springframework.boot.autoconfigure.session.SessionProperties", SessionProperties__TestContext001_BeanDefinitions.getSessionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.SessionAutoConfiguration$ServletSessionConfiguration", SessionAutoConfiguration__TestContext001_BeanDefinitions.ServletSessionConfiguration.getServletSessionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("cookieSerializer", SessionAutoConfiguration__TestContext001_BeanDefinitions.ServletSessionConfiguration.getCookieSerializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.session.SessionAutoConfiguration", SessionAutoConfiguration__TestContext001_BeanDefinitions.getSessionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties", WebFluxProperties__TestContext001_BeanDefinitions.getWebFluxPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration", DataSourceInitializationConfiguration__TestContext001_BeanDefinitions.getDataSourceInitializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dataSourceScriptDatabaseInitializer", DataSourceInitializationConfiguration__TestContext001_BeanDefinitions.getDataSourceScriptDatabaseInitializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__TestContext001_BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__TestContext001_BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__TestContext001_BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__TestContext001_BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__TestContext001_BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.JdbcTransactionManagerConfiguration.getJdbcTransactionManagerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration", DataSourceTransactionManagerAutoConfiguration__TestContext001_BeanDefinitions.getDataSourceTransactionManagerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getProxyTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionAdvisor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionInterceptor", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionInterceptorBeanDefinition());
    beanFactory.registerBeanDefinition("transactionAttributeSource", ProxyTransactionManagementConfiguration__TestContext001_BeanDefinitions.getTransactionAttributeSourceBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.transaction.config.internalTransactionalEventListenerFactory", AbstractTransactionManagementConfiguration__TestContext001_BeanDefinitions.getInternalTransactionalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration.getCglibAutoProxyConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.EnableTransactionManagementConfiguration.getEnableTransactionManagementConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("transactionTemplate", TransactionAutoConfiguration__TestContext001_BeanDefinitions.TransactionTemplateConfiguration.getTransactionTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__TestContext001_BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("httpMessageConvertersRestClientCustomizer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getHttpMessageConvertersRestClientCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientSsl", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientSslBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilderConfigurer", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restClientBuilder", RestClientAutoConfiguration__TestContext001_BeanDefinitions.getRestClientBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__TestContext001_BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__TestContext001_BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__TestContext001_BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__TestContext001_BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration", WebSocketMessagingAutoConfiguration__TestContext001_BeanDefinitions.getWebSocketMessagingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.core.config.ApplicationModuleInitializerRuntimeVerification", ApplicationModuleInitializerRuntimeVerification__TestContext001_BeanDefinitions.getApplicationModuleInitializerRuntimeVerificationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.events.config.EventExternalizationAutoConfiguration", EventExternalizationAutoConfiguration__TestContext001_BeanDefinitions.getEventExternalizationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("filteringEventListenerFactory", EventExternalizationAutoConfiguration__TestContext001_BeanDefinitions.getFilteringEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("eventExternalizationConfiguration", EventExternalizationAutoConfiguration__TestContext001_BeanDefinitions.getEventExternalizationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.scheduling.annotation.ProxyAsyncConfiguration", ProxyAsyncConfiguration__TestContext001_BeanDefinitions.getProxyAsyncConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.annotation.internalAsyncAnnotationProcessor", ProxyAsyncConfiguration__TestContext001_BeanDefinitions.getInternalAsyncAnnotationProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.events.config.EventPublicationAutoConfiguration$AsyncEnablingConfiguration", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.AsyncEnablingConfiguration.getAsyncEnablingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.events.config.EventPublicationAutoConfiguration", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getEventPublicationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("eventPublicationRegistry", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getEventPublicationRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("applicationEventMulticaster", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getApplicationEventMulticasterBeanDefinition());
    beanFactory.registerBeanDefinition("completionRegisteringAdvisor", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getCompletionRegisteringAdvisorBeanDefinition());
    beanFactory.registerBeanDefinition("asyncPropertiesDefaulter", EventPublicationAutoConfiguration__TestContext001_BeanDefinitions.getAsyncPropertiesDefaulterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.events.jackson.JacksonEventSerializationConfiguration", JacksonEventSerializationConfiguration__TestContext001_BeanDefinitions.getJacksonEventSerializationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonEventSerializer", JacksonEventSerializationConfiguration__TestContext001_BeanDefinitions.getJacksonEventSerializerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.scheduling.annotation.SchedulingConfiguration", SchedulingConfiguration__TestContext001_BeanDefinitions.getSchedulingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.annotation.internalScheduledAnnotationProcessor", SchedulingConfiguration__TestContext001_BeanDefinitions.getInternalScheduledAnnotationProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.modulith.moments.autoconfigure.MomentsAutoConfiguration", MomentsAutoConfiguration__TestContext001_BeanDefinitions.getMomentsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("moments", MomentsAutoConfiguration__TestContext001_BeanDefinitions.getMomentsBeanDefinition());
    beanFactory.registerBeanDefinition("spring.modulith.moments-org.springframework.modulith.moments.support.MomentsProperties", MomentsProperties__TestContext001_BeanDefinitions.getMomentsPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospectorRequestTransformer", HandlerMappingIntrospectorRequestTransformer__TestContext001_BeanDefinitions.getMvcHandlerMappingIntrospectorRequestTransformerBeanDefinition());
    beanFactory.registerBeanDefinition("springSecurityFilterChain", WebMvcSecurityConfiguration__TestContext001_BeanDefinitions.CompositeFilterChainProxy.getSpringSecurityFilterChainBeanDefinition());
    beanFactory.registerBeanDefinition("jpaSharedEM_AWC_entityManagerFactory", SharedEntityManagerCreator__TestContext001_BeanDefinitions.getJpaSharedEMAWCentityManagerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("com.vaadin.flow.spring.springnative.VaadinBeanFactoryInitializationAotProcessor$Marker", VaadinBeanFactoryInitializationAotProcessor__TestContext001_BeanDefinitions.Marker.getMarkerBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "bootstrapExecutor");
  }
}
